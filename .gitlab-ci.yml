stages:
  - build
  - test
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2

services:
  - docker:23.0.3

before_script:
  - GRADLE_USER_HOME="$(pwd)/.gradle"
  - export GRADLE_USER_HOME
  - chmod +x ./**/gradlew

mediscreen:
  stage: build
  image: docker:23.0.3
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  script:
    - docker build -t patient-microservice ./patient-microservice
    - docker build -t mediscreen_angular ./mediscreen-frontend
    - docker build -t practitioner-notes ./Practitioner-Notes
    - docker build -t rapport-microservice ./Rapport-Microservice
  only:
    - develop_gitlab_02062023
test:
  stage: test
  image: docker:20.10.8
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  script:
    - docker build -t patient-microservice ./patient-microservice
    - docker build -t mediscreen_angular ./mediscreen-frontend
    - docker build -t practitioner-notes ./Practitioner-Notes
    - docker build -t rapport-microservice ./Rapport-Microservice
    - docker run -d --name mysqldb -p 3307:3306 --env-file .env mysql:8.0.32
    - docker run -d --name mymongodb -p 27018:27017 --env-file .env mongo:latest
    - docker run -d --name patient-microservice -p 8081:8081 --env-file .env patient-microservice
    - docker run -d --name mediscreen_angular -p 4200:4200 --env-file .env mediscreen_angular
    - docker run -d --name practitioner-notes -p 8082:8082 --env-file .env practitioner-notes
    - docker run -d --name rapport-microservice -p 8080:8080 --env-file .env rapport-microservice
    - echo "Running tests..."
  only:
    - develop_gitlab_02062023

deploy:
  stage: deploy
  image: docker:23.0.3
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  script:
    - echo "Deploying..."
    # Add deployment commands here
  only:
    - develop_gitlab_02062023
